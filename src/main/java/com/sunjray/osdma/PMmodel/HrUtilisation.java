package com.sunjray.osdma.PMmodel;
// Generated Aug 15, 2019 11:10:19 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.sunjray.osdma.PCmodel.EmployeePersonalDetails;
import com.sunjray.osdma.PCmodel.MasterTeam;
import com.sunjray.osdma.PCmodel.Project;

/**
 * TOsHrUtilisation generated by hbm2java
 */
@Entity
@Table(name = "t_os_hr_utilisation", catalog = "osdma")
public class HrUtilisation implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int utilId;
	private Project project;
	private MasterTeam masterTeam;
	private EmployeePersonalDetails employeePersonalDetails;
	private String status;
	private Integer createdBy;
	private Date createdDate;
	private Integer updatedBy;
	private Date updatedDate;

	public HrUtilisation() {
	}

	public HrUtilisation(int utilId) {
		this.utilId = utilId;
	}

	public HrUtilisation(int utilId, Project project, MasterTeam masterTeam, EmployeePersonalDetails employeePersonalDetails, String status,
			Integer createdBy, Date createdDate, Integer updatedBy, Date updatedDate) {
		this.utilId = utilId;
		this.project = project;
		this.masterTeam = masterTeam;
		this.employeePersonalDetails = employeePersonalDetails;
		this.status = status;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	@Id

	@Column(name = "util_id", unique = true, nullable = false)
	public int getUtilId() {
		return this.utilId;
	}

	public void setUtilId(int utilId) {
		this.utilId = utilId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "project_id")
	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "team_id")
	public MasterTeam getMasterTeam() {
		return masterTeam;
	}

	public void setMasterTeam(MasterTeam masterTeam) {
		this.masterTeam = masterTeam;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "employee_id")
	public EmployeePersonalDetails getEmployeePersonalDetails() {
		return employeePersonalDetails;
	}

	public void setEmployeePersonalDetails(EmployeePersonalDetails employeePersonalDetails) {
		this.employeePersonalDetails = employeePersonalDetails;
	}

	@Column(name = "status", length = 60)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "created_by")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

}
